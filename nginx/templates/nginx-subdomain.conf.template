map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Server block for tnra subdomain (routes to port 8080)
server {
    server_name tnra.afitnerd.com;

    location / {
        proxy_pass http://server:8080;

        proxy_buffering off;
        proxy_cache off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:443;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    listen 443 ssl;
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
}

# Server block for tnra-new subdomain (routes to port 8081)
server {
    server_name tnra-new.afitnerd.com;

    location / {
        proxy_pass http://server:8081;

        proxy_buffering off;
        proxy_cache off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:443;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    listen 443 ssl;
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
}

# HTTP to HTTPS redirect for both subdomains
server {
    listen 80;
    server_name tnra.afitnerd.local tnra-new.afitnerd.local;
    return 301 https://$server_name$request_uri;
} 