# secretlint-disable @secretlint/secretlint-rule-pattern
# temporarily disable until moved to entering environment variables for this
---
services:
  proxy:
    container_name: proxy
    image: nginx:latest
    environment:
      # requests will be forwarded to http://<DOCKER_HOST>:<TARGET_PORT>
      # This will be similar to accessing: http://localhost:8080
      - APP_PORT=8080
    volumes:
      - './nginx/templates:/etc/nginx/templates'
      - './nginx/.cert:/etc/nginx/certs'
    ports:
      - '443:443'
  server:
    container_name: tnra
    image: tnra
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      DD_AGENT_MAJOR_VERSION: ${DD_AGENT_MAJOR_VERSION}
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: ${DD_SITE}
      LOGGING_LEVEL_COM_AFITNERD_TNRA: ${LOGGING_LEVEL_COM_AFITNERD_TNRA}
      LOGGING_LEVEL_ORG_APACHE_HTTP: ${LOGGING_LEVEL_ORG_APACHE_HTTP}
      LOGGING_LEVEL_ORG_APACHE_HTTP_WIRE: ${LOGGING_LEVEL_ORG_APACHE_HTTP_WIRE}
      MAILGUN_KEY_PRIVATE: ${MAILGUN_KEY_PRIVATE}
      MAILGUN_KEY_PUBLIC: ${MAILGUN_KEY_PUBLIC}
      MAILGUN_MAX_EMAIL_TO_SMS_LENGTH: ${MAILGUN_MAX_EMAIL_TO_SMS_LENGTH}
      MAILGUN_URL: ${MAILGUN_URL}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tnra
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      OKTA_OAUTH2_CLIENT: ${OKTA_OAUTH2_CLIENT}
      OKTA_OAUTH2_ISSUER: ${OKTA_OAUTH2_ISSUER}
      PQ_REFRESH_SCHEDULE: ${PQ_REFRESH_SCHEDULE}
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/tnra
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      TNRA_NOTIFY_SCHEDULE: ${TNRA_NOTIFY_SCHEDULE}
      TNRA_SLACK_ACCESS_TOKEN: ${TNRA_NOTIFY_SCHEDULE}
      TNRA_SLACK_BROADCAST_CHANNEL: ${TNRA_SLACK_BROADCAST_CHANNEL}
      TNRA_SLACK_TOKEN: ${TNRA_SLACK_TOKEN}
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    container_name: mysql
    image: mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 1s
      timeout: 3s
      retries: 30
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tnra
    ports:
      - '3307:3306'
    volumes:
      - 'mysql-db:/var/lib/mysql'
volumes:
  mysql-db:
